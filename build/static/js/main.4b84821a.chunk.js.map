{"version":3,"sources":["components/rForm.js","components/filter.js","services/contacts.js","App.js","index.js"],"names":["InputForm","props","onSubmit","adder","value","name","onChange","nameHandler","title","titleHandler","url","urlHandler","likes","likesHandler","type","Filter","q","handler","baseUrl","getAll","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","records","setRecords","useEffect","contactService","initial","Array","newTitle","newName","newUrl","newLikes","setRecord","stateArray","query","setQuery","filtered","setFilter","notification","setNotification","notifier","message","setTimeout","console","log","list","filter","toLowerCase","startsWith","Notification","className","Records","map","author","onClick","window","confirm","returnedData","catch","error","del","event","target","preventDefault","record","found","length","ID","rec","concat","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b84821a.chunk.js","sourcesContent":["import React from 'react'\n\nconst InputForm = (props) => {\n    return(\n      <form onSubmit={props.adder}>\n          <h2>Add New</h2>\n          <div>\n            Author: <input \n                  value={props.name}\n                  onChange={props.nameHandler}\n                  />\n          </div>\n          <div>\n            Title: <input \n                  value={props.title}\n                  onChange={props.titleHandler}\n                  />\n          </div>\n          <div>\n            Url: <input \n                  value={props.url}\n                  onChange={props.urlHandler}\n                  />\n          </div>\n          <div>\n            UP-Votes: <input value={props.likes}\n                        onChange={props.likesHandler}\n                    />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    )\n  }\n\nexport default InputForm","import React from 'react'\n\nconst Filter = (props) => {\n    return(\n      <div>\n        Filter with: <input value={props.q}\n                        onChange={props.handler}\n                        />\n      </div>\n    )\n  }\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (data) => {\n  const request = axios.delete(`${baseUrl}/${data.id}`)\n  return (\n    request.then(()=>getAll())\n  )\n}\n\n/*\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update \n}\n*/\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, del }","import React, { useState, useEffect } from 'react'\nimport RecordsForm from './components/rForm.js'\nimport Filter from './components/filter.js'\nimport contactService from './services/contacts'\n\nconst App = () => {\n  const [records, setRecords] = useState([])\n  useEffect(() => {\n    contactService\n    .getAll()\n    .then(initial => {\n      setRecords(initial)\n    })\n  }, [])\n  const [[newTitle, newName, newUrl, newLikes], setRecord] = useState(new Array(4))\n  const stateArray = [newTitle, newName, newUrl, newLikes] \n  const [query, setQuery] = useState('')\n  const [filtered, setFilter] = useState(records)\n\n  //Notifier\n  const [notification, setNotification] = useState(null)\n  const notifier = (message) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  // Adder\n  const addRecord = (event) => {\n    event.preventDefault()\n    const record = {\n      title: newTitle,\n      author: newName,\n      url: newUrl,\n      likes: newLikes\n    }\n    console.log(record)\n    let found = records.filter(data=>data.title===newTitle)\n    if (found.length!==0){\n      const ID = found[0].id\n      contactService\n        .update(ID, record)\n        .then(returnedData=>{\n          setRecords(records.map(rec => rec.id !== ID ? rec : returnedData))\n          notifier(`Updated ${newTitle}`)\n        })\n        .catch(error => {notifier(error.response.data.error)})\n    }else{\n      contactService\n        .create(record)\n        .then(returnedData=>{\n          notifier(`Created ${newTitle}`)\n          setRecords(records.concat(returnedData))\n        })\n        .catch(error => {notifier(error.response.data.error)})\n    }\n  }\n  //Deletor\n  const del = (data) => {\n    const okay = window.confirm(`Delete ${data.title} ?`)\n    if (okay) {\n      contactService.del(data)\n      .then(returnedData=>{\n        setRecords(returnedData)\n        notifier(`Deleted ${data.title}`)\n      })\n      .catch(error => {notifier(error.response.data.error)})\n    }\n  }\n\n  /* Handlers below */\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value)\n  }\n  const handleTitleChange = (event) => {\n    stateArray[0] = event.target.value.trim()\n    setRecord(stateArray)\n  }\n  const handleNameChange = (event) => {\n    stateArray[1] = event.target.value.trim()\n    setRecord(stateArray)\n  }\n  const handleUrlChange = (event) => {\n    stateArray[2] = event.target.value.trim()\n    setRecord(stateArray)\n  }\n  const handleLikesChange = (event) => {\n    stateArray[3] = event.target.value.trim()\n    setRecord(stateArray)\n  }\n\n  //Filter\n  useEffect(() => {\n    if (query !== '') {\n      console.log(\"QUERY\",query);\n      let list = records.filter(data => data?data.title.toLowerCase().startsWith(query.toLowerCase()):false)\n      setFilter(list)\n    }else{\n      console.log(\"QUERY Empty\");\n      setFilter(records)\n    }\n  }, [query,records]);\n  \n  \n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notifier\">\n        {message}\n      </div>\n    )\n  }\n\n  const Records = (props) => {\n    console.log(\"list\",props.list)\n    return(\n      <ul>\n          {props.list.map(data => {\n          return(\n          <li key={data.id}>{data.author} {data.title} {data.url} {data.likes} \n          <button onClick={()=>del(data)}>delete</button>\n          </li>\n          )\n          })\n          }\n      </ul>\n    )\n  }\n  /* rendering below */\n  return (\n    <div>\n      <h2>Blog List App</h2>\n      <Notification message={notification} />\n      <Filter q={query} handler={handleQueryChange}/>\n      <RecordsForm \n        adder = {addRecord}\n        name = {newName}\n        nameHandler = {handleNameChange}\n        title = {newTitle}\n        titleHandler = {handleTitleChange}\n        url = {newUrl}\n        urlHandler = {handleUrlChange}\n        likes = {newLikes}\n        likesHandler = {handleLikesChange}\n      />\n      <h2>Blogs</h2>\n      <Records list={filtered} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}